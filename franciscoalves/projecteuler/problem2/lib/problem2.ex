defmodule Problem2 do
  # Each new term in the Fibonacci sequence
  # is generated by adding the previous two terms.
  # By starting with 1 and 2, the first 10 terms will be:
  # 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  # By considering the terms in the Fibonacci sequence
  # whose values do not exceed four million,
  # find the sum of the even-valued terms.
  def fib(0) do 0 end
  def fib(1) do 1 end
  def fib(n) do fib(n - 1) + fib(n - 2) end

  def even_fib(n) do fib(3*n) end

  def even_fib_list(list, max) do
    next_even_fib = even_fib(Enum.count(list)+1)
    if Enum.empty?(list) or (next_even_fib <= max) do
      even_fib_list(
        list ++ [next_even_fib],
        max
      )
    else
      list
    end
  end

  def compute n do
    even_fib_list([], n)|> Enum.sum
  end
end
